version: '3.5'

services:

  # mailer
  pm-mailer:
    container_name: pm-mailer
    image: mailhog/mailhog
    restart: unless-stopped
    ports:
    - "1025:1025"
    - "8025:8025" # Dashboard

  # cli
  pm-php-cli:
    container_name: pm-php-cli
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    volumes:
    - .:/var/www
    - composer:/root/.composer/cache
  #    environment:
  #      APP_DEBUG: 1

  # fpm
  pm-php-fpm:
    container_name: pm-php-fpm
    build:
      context: ./docker/php/fpm
      dockerfile: Dockerfile
    volumes:
    - .:/var/www

  # nginx
  pm-nginx:
    container_name: pm-nginx
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    volumes:
    - .:/var/www
    ports:
    - "3107:80"
    depends_on:
    - pm-php-fpm

  # postgres host.docker.internal
  pm-postgres:
    container_name: pm-pgsql
    image: postgres:12.1-alpine
    volumes:
    - ./var/data:/var/lib/postgresql/data
    environment:
    - "POSTGRES_USER=postgres"
    - "POSTGRES_PASSWORD=postgres"
    - "POSTGRES_DB=pm"
    ports:
    - "54321:5432"

  pm-pgadmin:
    container_name: pm-pga
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-pgadmin}
    ports:
    - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - pm-postgres

  pm-node:
    container_name: pm-node
    image: node:13.2.0-alpine
    volumes:
    - ./:/var/www
    working_dir: /var/www

#  # rabbitmq
#  video-rabbitmq:
#    container_name: video-rabbit
#    image: rabbitmq:3-management
#    environment:
#      RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
#      RABBITMQ_DEFAULT_USER: rabbit
#      RABBITMQ_DEFAULT_PASS: rabbit
#    ports:
#    - "1919:15672" # dashboard
#    - "5672:5672"
#    volumes:
#    - ./docker/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
#
#  video-php-ws:
#    container_name: video-php-ws
#    build:
#      context: ./docker/php/websocket
#      dockerfile: Dockerfile
#    volumes:
#    - .:/var/www
#    # - .:/superman:cached
#    ports:
#    - "9001:9001"
#    tty: true # don`t stop
#
#  video-php-processor:
#    container_name: video-php-processor
#    build:
#      context: ./docker/php/processor
#      dockerfile: Dockerfile
#    volumes:
#    - .:/var/www

volumes:
  composer:
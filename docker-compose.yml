version: '3.5'

services:

  # mailer
  pm-mailer:
    container_name: pm-mailer
    image: mailhog/mailhog
    restart: unless-stopped
    ports:
      - 1025:1025
      - 8025:8025 # Dashboard

  # php-fpm
  pm-php-fpm:
    container_name: pm-php-fpm
    build:
      context: .
      dockerfile: docker/php-fpm/Dockerfile
      target: development
      args:
        ENVIRONMENT: development
    volumes:
      - ./app:/var/www/html:rw
      - ~/.ssh:/root/.ssh:ro
      - ~/.composer:/root/.composer:ro

  # nginx
  pm-nginx:
    container_name: pm-nginx
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      target: development
      args:
        ENVIRONMENT: development
    volumes:
      - ./app:/var/www/html
    ports:
      - 3107:80
    depends_on:
      - pm-php-fpm

  # postgres host.docker.internal
  pm-postgres:
    container_name: pm-pgsql
    image: postgres:12.1-alpine
    volumes:
      - ./app/var/data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-pm}
    ports:
      - 54321:5432

  # pgadmin
  pm-pgadmin:
    container_name: pm-pga
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-pgadmin}
    ports:
      - ${PGADMIN_PORT:-5050}:80
    depends_on:
      - pm-postgres

  # node-cli
  pm-node-cli:
    container_name: pm-node-cli
    image: node:13.2.0-alpine
    volumes:
      - ./app:/var/www/html
    working_dir: /var/www/html

  # node npm watch
  pm-node-watch:
    container_name: pm-node-watch
    image: node:13.2.0-alpine
    restart: always
    volumes:
      - ./app:/var/www/html
    working_dir: /var/www/html
    command: sh -c "until [ -f project.pid ] ; do sleep 1; done && npm run watch"

  # redis
  pm-redis:
    container_name: pm-redis
    image: redis:3.0-alpine
    volumes:
      - pm-redis:/data
    command: redis-server --requirepass secret
    ports:
      - 6379:6379

  # pm-mariadb:
  #   image: mariadb
  #   container_name: pm-mariadb
  #   environment:
  #     MYSQL_DATABASE: pm
  #     MYSQL_ROOT_PASSWORD: root
  #   restart: always
  #   ports:
  #   - 3107:3306
  #
  # pm-pma:
  #   image: phpmyadmin/phpmyadmin
  #   container_name: pm-pma
  #   ports:
  #   - 1986:80
  #   environment:
  #     PMA_HOST: pm-mariadb
  #     PMA_USER: root
  #     PMA_PASSWORD: root

volumes:
  pm-redis:
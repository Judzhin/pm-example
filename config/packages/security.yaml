security:
  encoders:
    App\Entity\User:
      algorithm: argon2i

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:

    # example memory
    # in_memory: { memory: ~ }

    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      # custom provider
      id: App\Security\UserProvider
      # entity:
      #   class: App\Entity\User
      #   property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      # anonymous: lazy
      anonymous: true

      # override default user checker
      user_checker: App\Security\UserChecker

      guard:
        authenticators:
        - App\Security\FormLoginAuthenticator
        # - App\Security\OAuth\FacebookAuthenticator
        entry_point: App\Security\FormLoginAuthenticator

      remember_me:
        secret: '%kernel.secret%'
        lifetime: 604800
        path: /

      form_login: true

      logout:
        path: app_logout
        # where to redirect after logout
        # target: app_any_route

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  role_hierarchy:
    # ROLE_ADMIN: ROLE_USER
    # ROLE_SUPER_ADMIN: [ROLE_ADMIN]
    # ROLE_ADMIN: [ROLE_USER, ROLE_MANAGE_USERS, ROLE_WORK_MANAGE_MEMBERS]
    ROLE_ADMIN:
    - ROLE_USER
    - ROLE_MANAGE_USERS
    - ROLE_WORK_MANAGE_MEMBERS
    - ROLE_WORK_MANAGE_PROJECTS

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
  # - { path: ^/admin, roles: ROLE_ADMIN }
  # - { path: ^/profile, roles: ROLE_USER }

  # for not authenticated
  - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
  - { path: ^/password-reset, roles: IS_AUTHENTICATED_ANONYMOUSLY }
  - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
  - { path: ^/signup, roles: IS_AUTHENTICATED_ANONYMOUSLY }
  - { path: ^/connect/facebook, roles: IS_AUTHENTICATED_ANONYMOUSLY }
  - { path: ^/connect/facebook/check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
  # - { path: ^/, roles: IS_AUTHENTICATED_FULLY } #

  # granted
  # - { path: ^/users, roles: ROLE_MANAGE_USERS } Move to controller annotation
  - { path: ^/, roles: [IS_AUTHENTICATED_FULLY, ROLE_USER] }